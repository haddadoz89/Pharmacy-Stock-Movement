<%- include('../partials/_navbar.ejs') %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<div class="container mt-5">
  <h2 class="mb-4 text-center">Medication List</h2>

  <!-- Search with autocomplete -->
  <form class="d-flex mb-2 position-relative" method="GET" action="/medications" autocomplete="off">
    <input 
      type="text" 
      class="form-control me-2" 
      id="searchBox"
      name="search" 
      value="<%= search %>" 
      placeholder="Search...">
    <button class="btn btn-primary" type="submit">Search</button>
    <!-- Autocomplete list -->
    <ul id="autocompleteList" class="list-group position-absolute w-100" style="z-index:10; top:100%; left:0;"></ul>
  </form>

  <% if (user.position === "Head of Pharmacy") { %>
    <form method="GET" action="/medications" class="mb-4">
      <input type="hidden" name="search" value="<%= search %>">
      <div class="d-flex align-items-center gap-2">
        <label class="form-label mb-0">Filter:</label>
        <select class="form-select" name="status" onchange="this.form.submit()">
          <option value="all" <%= status === 'all' ? 'selected' : '' %>>All</option>
          <option value="active" <%= status === 'active' ? 'selected' : '' %>>Active</option>
          <option value="inactive" <%= status === 'inactive' ? 'selected' : '' %>>Inactive</option>
        </select>
      </div>
    </form>
  <% } %>

  <div class="mb-4">
    <% if (user.position === "Head of Pharmacy") { %>
      <a class="btn btn-success me-2" href="/medications/new">Add New Medication</a>
      <a class="btn btn-outline-primary me-2" href="/medications/import">Import Medication Catalog</a>
      <a class="btn btn-outline-secondary" href="/transactions/import">Import Transactions</a>
    <% } %>
    <% if (user.position !== "Head of Pharmacy") { %>
      <a class="btn btn-outline-secondary" href="/transactions/import">Import Transactions</a>
    <% } %>
  </div>

  <% if (groupKeys.length > 0) { %>
    <div class="accordion" id="medicationAccordion">
      <% groupKeys.forEach((group, idx) => { 
        const collapseId = `collapse${idx}`;
        const headingId = `heading${idx}`;
      %>
        <div class="accordion-item">
          <h2 class="accordion-header" id="<%= headingId %>">
            <button class="accordion-button collapsed fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#<%= collapseId %>" aria-expanded="false" aria-controls="<%= collapseId %>">
              <%= group %>
            </button>
          </h2>
          <div id="<%= collapseId %>" class="accordion-collapse collapse" aria-labelledby="<%= headingId %>" data-bs-parent="#medicationAccordion">
            <div class="accordion-body p-0">
              <div class="list-group list-group-flush">
                <% grouped[group].forEach(item => { %>
                  <div class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                      <a class="text-decoration-none" href="/medications/<%= item._id %>">
                        <strong><%= item.codeNumber %></strong> - <%= item.itemName %>
                      </a>
                      <% if (!item.isActive) { %>
                        <span class="badge bg-secondary ms-2">Inactive</span>
                      <% } %>
                    </div>
                    <% if (user.position === "Head of Pharmacy") { %>
                      <div class="d-flex gap-2">
                        <form method="POST" action="/medications/<%= item._id %>/toggle" style="display:inline;">
                          <button type="submit" class="btn btn-sm <%= item.isActive ? 'btn-warning' : 'btn-success' %>">
                            <%= item.isActive ? 'Deactivate' : 'Activate' %>
                          </button>
                        </form>
                        <a class="btn btn-sm btn-warning" href="/medications/<%= item._id %>/edit">Edit</a>
                        <form method="POST" action="/medications/<%= item._id %>?_method=DELETE" style="display:inline;">
                          <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                        </form>
                      </div>
                    <% } %>
                  </div>
                <% }) %>
              </div>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  <% } else { %>
    <div class="alert alert-info mt-3">No medications found.</div>
  <% } %>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
const searchInput = document.getElementById('searchBox');
const list = document.getElementById('autocompleteList');
let currentFocus = -1;

searchInput.addEventListener('input', async function() {
  const q = this.value.trim();
  list.innerHTML = '';
  if (q.length < 2) return;
  const res = await fetch(`/medications/autocomplete?q=${encodeURIComponent(q)}`);
  const meds = await res.json();
  meds.forEach((m, idx) => {
    const li = document.createElement('li');
    li.className = "list-group-item list-group-item-action";
    li.innerHTML = `<strong>${m.codeNumber}</strong> - ${m.itemName}`;
    li.onclick = () => {
      searchInput.value = m.codeNumber;
      list.innerHTML = '';
      // Optionally, submit form automatically:
      // searchInput.form.submit();
    };
    list.appendChild(li);
  });
});

document.addEventListener('click', (e) => {
  if (!list.contains(e.target) && e.target !== searchInput) {
    list.innerHTML = '';
  }
});

// Optional: Keyboard navigation
searchInput.addEventListener('keydown', function(e) {
  let items = list.getElementsByTagName("li");
  if (!items.length) return;
  if (e.key === "ArrowDown") {
    currentFocus++;
    if (currentFocus >= items.length) currentFocus = 0;
    setActive(items, currentFocus);
    e.preventDefault();
  } else if (e.key === "ArrowUp") {
    currentFocus--;
    if (currentFocus < 0) currentFocus = items.length - 1;
    setActive(items, currentFocus);
    e.preventDefault();
  } else if (e.key === "Enter") {
    if (currentFocus > -1 && items[currentFocus]) {
      items[currentFocus].click();
      e.preventDefault();
    }
  }
});
function setActive(items, idx) {
  for (let i = 0; i < items.length; i++) items[i].classList.remove("active");
  if (idx >= 0 && items[idx]) items[idx].classList.add("active");
}
</script>